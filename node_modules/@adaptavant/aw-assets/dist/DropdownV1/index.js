"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Avatar = _interopRequireDefault(require("../Avatar"));

var _Checkbox = _interopRequireDefault(require("../Checkbox"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function Dropdown(props) {
  var children = props.children;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      open = _useState2[0],
      setOpen = _useState2[1];

  function _onClick(event) {
    setOpen(!open);
  }

  var childrenWithProps = _react.default.Children.map(children, function (child) {
    if ( /*#__PURE__*/_react.default.isValidElement(child)) {
      return /*#__PURE__*/_react.default.cloneElement(child, {
        onClick: _onClick
      });
    }

    return child;
  });

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)({
      'g-dropdown-wrap': true,
      'open': open
    })
  }, childrenWithProps);
}

var DropdownButton = function DropdownButton(_ref) {
  var children = _ref.children,
      onClick = _ref.onClick;
  return /*#__PURE__*/_react.default.createElement("button", {
    className: "g-drop-btn",
    onClick: onClick
  }, /*#__PURE__*/_react.default.createElement("span", null, children), /*#__PURE__*/_react.default.createElement("i", {
    className: "g-drop-arrow"
  }));
};

var DropdownLabel = function DropdownLabel(_ref2) {
  var children = _ref2.children;
  return /*#__PURE__*/_react.default.createElement("label", {
    className: "g-drop-label"
  }, children);
};

var DropdownMenu = function DropdownMenu(_ref3) {
  var children = _ref3.children,
      hasArrow = _ref3.hasArrow,
      onClick = _ref3.onClick;

  var childrenWithProps = _react.default.Children.map(children, function (child) {
    if ( /*#__PURE__*/_react.default.isValidElement(child)) {
      return /*#__PURE__*/_react.default.cloneElement(child, {
        onClose: onClick
      });
    }

    return child;
  });

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "g-dropmenu has-arrow"
  }, /*#__PURE__*/_react.default.createElement("ul", null, childrenWithProps));
};

var ListItem = function ListItem(props) {
  var _props$type = props.type,
      type = _props$type === void 0 ? 'listitem' : _props$type,
      children = props.children,
      isChecked = props.isChecked,
      photo = props.photo,
      onClose = props.onClose,
      onClick = props.onClick;

  var _onClick = function _onClick(event) {
    if (onClose) {
      onClose(event);
    }

    if (onClick) {
      onClick(event);
    }
  };

  switch (type) {
    case 'listitem':
      return /*#__PURE__*/_react.default.createElement("li", {
        onClick: _onClick
      }, /*#__PURE__*/_react.default.createElement("span", null, children));

    case 'listitem_option':
      return /*#__PURE__*/_react.default.createElement("li", {
        className: "has-check",
        onClick: _onClick
      }, /*#__PURE__*/_react.default.createElement(_Checkbox.default, {
        isChecked: isChecked
      }), /*#__PURE__*/_react.default.createElement("span", null, children));

    case 'listitem_avatar':
      return /*#__PURE__*/_react.default.createElement("li", {
        className: "has-avatar",
        onClick: _onClick
      }, /*#__PURE__*/_react.default.createElement(_Avatar.default, {
        url: photo
      }), /*#__PURE__*/_react.default.createElement("span", null, children));

    default:
      return null;
  }
};

Dropdown.ToggleButton = DropdownButton;
Dropdown.Label = DropdownLabel;
Dropdown.Menu = DropdownMenu;
Dropdown.Listitem = ListItem;
Dropdown.propTypes = {
  children: _propTypes.default.symbol
};
Dropdown.ToggleButton.PropTypes = {
  children: _propTypes.default.symbol,
  onClick: _propTypes.default.func
};
Dropdown.Menu.propTypes = {
  children: _propTypes.default.symbol,
  hasArrow: _propTypes.default.bool,
  onClick: _propTypes.default.func
};
Dropdown.Label.propTypes = {
  children: _propTypes.default.symbol
};
Dropdown.Listitem.propTypes = {
  type: _propTypes.default.string,
  children: _propTypes.default.string,
  isChecked: _propTypes.default.bool,
  photo: _propTypes.default.string,
  onClose: _propTypes.default.func,
  onClick: _propTypes.default.func
};
var _default = Dropdown;
exports.default = _default;